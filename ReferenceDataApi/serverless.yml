service: reference-data-api
provider:
  name: aws
  runtime: dotnetcore3.1
  memorySize: 2048
  tracing:
    lambda: true
    apiGateway: true
  vpc: ${self:custom.vpc.${opt:stage}}
  stage: ${opt:stage}
  region: eu-west-2

package:
  artifact: ./bin/release/netcoreapp3.1/reference-data-api.zip

functions:
  ReferenceDataApi:
    name: ${self:service}-${self:provider.stage}
    handler: ReferenceDataApi::ReferenceDataApi.LambdaEntryPoint::FunctionHandlerAsync
    role: lambdaExecutionRole
    environment:
      ElasticSearchDomainUrl: ${ssm:/reference-data-api/${self:provider.stage}/elasticsearch-domain}
      ASPNETCORE_ENVIRONMENT:  ${ssm:/housing-tl/${self:provider.stage}/aspnetcore-environment}
    events:
      - http:
          path: /{proxy+}
          method: ANY
          authorizer:
            arn: ${ssm:/api-authenticator/${self:provider.stage}/arn}
            type: request
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            managedExternally: true
          cors: true
      - http:
          path: /swagger/{proxy+}
          method: GET
          private: false
resources:
  Resources:
    lambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /${self:service}/${self:provider.stage}/
        RoleName: ${self:service}-lambdaExecutionRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
          - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
        Policies:
          - PolicyName: manageLogs
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:logs'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'log-group:/aws/lambda/*:*:*'
                - Effect: "Allow"
                  Action:
                    - "s3:PutObject"
                    - "s3:GetObject"
                  Resource:
                    Fn::Join:
                      - ""
                      - - "arn:aws:s3:::"
                        - "Ref": "ServerlessDeploymentBucket"
          - PolicyName: lambdaInvocation
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - "lambda:InvokeFunction"
                  Resource: "*"
    Canary:
    Type: AWS::Synthetics::Canary
    Properties: 
      Name: ${self:service}-health
      Code: {Handler: pageLoadBlueprint.handler, S3Bucket: lbh-cw-canaries-api-testing-script-${self:provider.stage}, S3Key: cw-canary-api-test-script.zip}
      ExecutionRoleArn:
        - 'Fn::Join':
            - ':'
            - - 'arn:aws:iam'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'role/LBH_Canary_Role'
      RuntimeVersion: syn-nodejs-puppeteer-3.1
      RunConfig:
        TimeoutInSeconds: 300
        EnvironmentVariables:
          hostname: ${self:custom.domain-name}
          path: /${self:provider.stage}/api/v1/healthcheck/ping
          token: ''
      ArtifactS3Location:
        Fn::Join:
          - ''
          - - s3://
            - cw-syn-results-
            - Ref: 'AWS::AccountId'
            - -
            - Ref: 'AWS::Region' 
      StartCanaryAfterCreation: True
      Schedule:
        Expression: rate(5 minutes)
        DurationInSeconds: 0
      SuccessRetentionPeriod: 90
      FailureRetentionPeriod: 180
custom:
  hostname:
    Fn::Join:
      - '.'
      - - Ref: ApiGatewayRestApi
        - execute-api
        - eu-west-2
        - amazonaws.com
  vpc:
    development:
      securityGroupIds:
        - sg-0725e7dbc2508c798
      subnetIds:
        - subnet-0140d06fb84fdb547
        - subnet-05ce390ba88c42bfd
    staging:
      securityGroupIds:
        - sg-0fb44f2658c0a5d3b
      subnetIds:
        - subnet-0743d86e9b362fa38
        - subnet-0ea0020a44b98a2ca
    production:
      securityGroupIds:
        - sg-0ea24080e44e64fde
      subnetIds:
        - subnet-06a697d86a9b6ed01
        - subnet-0beb266003a56ca82
